# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: C++ CI

on:
  push:
    branches: [ "main", "ci"]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            build_type: "Release", cc: "cl", cxx: "cl"
          }
        - {
            name: "Windows Latest MinGW",
            os: windows-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Latest Clang",
            os: ubuntu-latest,
            build_type: "Release", cc: "clang", cxx: "clang++"
          }

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup MSVC environment
        if: matrix.config.cc == 'cl'
        run: |
             choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
             cmd.exe \C "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
             echo "CXX=cl.exe" >> $GITHUB_ENV
             echo "CC=cl.exe" >> $GITHUB_ENV

      - name: Configure Project
        uses: threeal/cmake-action@v1.3.0
        with:
          generator: Ninja
          c-compiler: ${{ matrix.config.cc }}
          cxx-compiler: ${{ matrix.config.cxx }}

      - name: Build Project
        run: cmake --build build

      - name: Test Project
        run: ctest --test-dir build
